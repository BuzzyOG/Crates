package red.reddington.crates.listeners;import org.bukkit.ChatColor;import org.bukkit.Material;import org.bukkit.block.Chest;import org.bukkit.entity.Player;import org.bukkit.event.EventHandler;import org.bukkit.event.Listener;import org.bukkit.event.block.Action;import org.bukkit.event.player.PlayerInteractEvent;import red.reddington.crates.Crates;/** * Created by Ryan on 5/3/2014. */public class PlayerInteractListener implements Listener {    private Crates instance;    public PlayerInteractListener(Crates instance){        this.instance = instance;    }    @EventHandler    public void onPlayerInteract(PlayerInteractEvent event) {        Player player = event.getPlayer();        if(event.getAction() == Action.RIGHT_CLICK_BLOCK){            if(event.getClickedBlock().getType() == Material.CHEST) {                if (event.getClickedBlock().getState() instanceof Chest) {                    if (instance.getCrateManager().getLoadedCrates().containsKey(event.getClickedBlock().getLocation())) {                        String keytype = instance.getCrateManager().getLoadedCrates().get(event.getClickedBlock().getLocation());                        Chest chest = (Chest) event.getClickedBlock().getState();                        event.setCancelled(true);                        System.out.println(keytype);                        if(instance.getKeyManager().getKeys(player, keytype) > 0){                            instance.getKeyManager().takeKeys(player, keytype, 1);                            instance.getCrateManager().runRandomCrateTask(instance.getCrateManager().getCratesKey(event.getClickedBlock().getLocation()), event.getPlayer());                            player.sendMessage(ChatColor.RED+"You have successfully used a "+keytype + " key to use a crate. You now have "+instance.getKeyManager().getKeys(player, keytype)+" keys left.");                        }else{                            player.sendMessage(ChatColor.RED+"Not enough keys!");                        }                    }                }            }        }    }}